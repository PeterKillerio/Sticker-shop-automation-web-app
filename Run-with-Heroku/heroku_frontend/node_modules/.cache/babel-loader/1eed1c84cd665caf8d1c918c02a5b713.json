{"ast":null,"code":"var _jsxFileName = \"/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_StickerListing/App_Filter.js\";\nimport React from 'react';\nimport './App_Filter.css'; // Import constants\n\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants'; // MUI \n\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Slider from '@mui/material/Slider';\nimport { ThemeProvider, createTheme } from '@mui/material/styles'; // Custom filter theme\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filterTheme = createTheme({\n  palette: {\n    primary: {\n      main: GLOBAL_CONSTANTS.COLORS.colorA\n    },\n    secondary: {\n      main: GLOBAL_CONSTANTS.COLORS.colorB\n    },\n    error: {\n      main: GLOBAL_CONSTANTS.COLORS.colorC\n    }\n  }\n});\n\nfunction Filter(props) {\n  function sliderValueText(value) {\n    // Slider value floating text \n    return `${value} mm`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: filterTheme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      className: \"filterContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          className: \"tagFilter\",\n          multiple: true,\n          highlight: true,\n          id: \"tags-standard\",\n          options: props.filterOptions,\n          getOptionLabel: option => option.name,\n          defaultValue: props.filterOptions,\n          renderOption: (props, option) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n              children: [option.name, \" (\", option.type, \" : \", option.count, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 36\n            }, this);\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            variant: \"standard\",\n            label: \"Filter stickers by a name or a tag\",\n            placeholder: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this),\n          onChange: (event, options) => props.onQueryChange(options),\n          onInputChange: (event, value) => props.onFilterInputChange(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Set the longest side of a sticker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [props.longestSidePick, \" mm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          className: \"sideSlider\",\n          \"aria-label\": \"Longest side picker\",\n          defaultValue: props.longestSidePick,\n          onChangeCommitted: (event, value) => props.onSliderChange(value),\n          valueLabelFormat: sliderValueText,\n          step: 1,\n          marks: true,\n          min: 15,\n          max: 100,\n          valueLabelDisplay: \"auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_StickerListing/App_Filter.js"],"names":["React","GLOBAL_CONSTANTS","LOCAL_CONSTANTS","Grid","TextField","Autocomplete","Slider","ThemeProvider","createTheme","filterTheme","palette","primary","main","COLORS","colorA","secondary","colorB","error","colorC","Filter","props","sliderValueText","value","filterOptions","option","name","type","count","params","event","options","onQueryChange","onFilterInputChange","longestSidePick","onSliderChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App_Filter.css';\n\n// Import constants\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants'\n\n// MUI \nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Slider from '@mui/material/Slider';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\n// Custom filter theme\nconst filterTheme = createTheme({\n    palette: {\n      primary: {\n        main: GLOBAL_CONSTANTS.COLORS.colorA,\n      },\n      secondary: {\n        main: GLOBAL_CONSTANTS.COLORS.colorB,\n      },\n      error: {\n        main: GLOBAL_CONSTANTS.COLORS.colorC,\n      },\n    },\n  });\n\nfunction Filter(props){\n    function sliderValueText(value) {\n        // Slider value floating text \n        return `${value} mm`;\n    }\n\n    return(\n        <ThemeProvider theme={filterTheme}>\n            <Grid container justifyContent=\"center\" className=\"filterContainer\">  \n                <Grid xs = {12}>\n                    <h2>Filter</h2>\n                </Grid>\n\n                <Grid xs = {12}>\n                    <Autocomplete\n                        className=\"tagFilter\"\n                        multiple\n                        highlight\n                        id=\"tags-standard\"\n                        options={props.filterOptions}\n                        getOptionLabel={(option) => option.name}\n                        defaultValue={ props.filterOptions }\n                        renderOption={(props, option) => {\n                            return <li {...props}>{option.name} ({option.type} : {option.count})</li>;\n                        }}\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                variant=\"standard\"\n                                label=\"Filter stickers by a name or a tag\"\n                                placeholder=\"Search\"\n                            />\n                        )}\n                        onChange={(event,options) => props.onQueryChange(options)}\n                        onInputChange={(event,value) => props.onFilterInputChange(value)}\n                    />\n                </Grid>\n\n                <Grid xs = {12}>\n                    <h2>Set the longest side of a sticker</h2>\n                    <p>{props.longestSidePick} mm</p>\n                </Grid>\n\n                <Grid xs = {12} >\n                    <Slider\n                        className=\"sideSlider\"\n                        aria-label=\"Longest side picker\"\n                        defaultValue={props.longestSidePick}\n                        onChangeCommitted={(event, value) => props.onSliderChange(value)}\n                        valueLabelFormat={sliderValueText}\n                        step={1}\n                        marks\n                        min={15}\n                        max={100}\n                        valueLabelDisplay=\"auto\"\n                    />\n                </Grid>\n\n            </Grid>\n        </ThemeProvider>\n    );\n}\n\nexport default Filter"]},"metadata":{},"sourceType":"module"}