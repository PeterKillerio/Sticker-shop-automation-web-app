{"ast":null,"code":"import axios from 'axios'; // Import constants\n\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants';\n\nconst addCartCanvas = async function (canvasStyleOptionId, canvasCutoutOptionId, amount, longestSidePick, backgroundColor, imageCanvasContext, eraserDeeraserCanvasContext, paintDepaintCanvasContext) {\n  console.log(\"*** imageCanvas: \" + imageCanvasContext); // API call: add canvas to the user cart.\n  // This function is used in different levels of the application and returns \n  // api server response.\n\n  let ret = null;\n  await axios({\n    method: 'post',\n    url: GLOBAL_CONSTANTS.API_CALL_BASE_URL + LOCAL_CONSTANTS.API_CALL_URLS.add_cart_canvas,\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.access_token)\n    },\n    data: {\n      canvas_style_option_id: canvasStyleOptionId,\n      canvas_cutout_option_id: canvasCutoutOptionId,\n      canvas_amount: amount,\n      background_color: backgroundColor,\n      longest_side_pick: longestSidePick,\n      image_canvas: imageCanvasContext.canvas.toDataURL(),\n      eraser_deeraser_canvas: eraserDeeraserCanvasContext.canvas.toDataURL(),\n      paint_depaint_canvas: paintDepaintCanvasContext.canvas.toDataURL()\n    },\n    validateStatus: () => true\n  }).then(res => {\n    console.log(\"Func_addCartCanvas.js res: \" + JSON.stringify(res));\n\n    if (res.status != 200) {\n      // Invalid request\n      console.log(\"<WARNING:Func_addCartCanvas.js>: Invalid request.\");\n    } else {\n      // Valid request\n      console.log(\"<INFO:Func_addCartCanvas.js> Access token is valid.\");\n    }\n\n    ret = res;\n  }); // Return after axios finished\n\n  return ret;\n};\n\nexport default addCartCanvas;","map":{"version":3,"sources":["/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_Editor/Func_addCartCanvas.js"],"names":["axios","GLOBAL_CONSTANTS","LOCAL_CONSTANTS","addCartCanvas","canvasStyleOptionId","canvasCutoutOptionId","amount","longestSidePick","backgroundColor","imageCanvasContext","eraserDeeraserCanvasContext","paintDepaintCanvasContext","console","log","ret","method","url","API_CALL_BASE_URL","API_CALL_URLS","add_cart_canvas","headers","Authorization","localStorage","getItem","LOCAL_STORAGE","access_token","data","canvas_style_option_id","canvas_cutout_option_id","canvas_amount","background_color","longest_side_pick","image_canvas","canvas","toDataURL","eraser_deeraser_canvas","paint_depaint_canvas","validateStatus","then","res","JSON","stringify","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,KAAKC,gBAAZ,MAAkC,uBAAlC;AACA,OAAO,KAAKC,eAAZ,MAAiC,kBAAjC;;AAEA,MAAMC,aAAa,GAAG,gBAAeC,mBAAf,EAAoCC,oBAApC,EAA0DC,MAA1D,EAAkEC,eAAlE,EAAmFC,eAAnF,EAAoGC,kBAApG,EAAwHC,2BAAxH,EAAqJC,yBAArJ,EAA+K;AACjMC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBJ,kBAAlC,EADiM,CAEjM;AACA;AACA;;AACA,MAAIK,GAAG,GAAG,IAAV;AAEA,QAAMd,KAAK,CAAC;AACRe,IAAAA,MAAM,EAAE,MADA;AAERC,IAAAA,GAAG,EAAKf,gBAAgB,CAACgB,iBAAjB,GACAf,eAAe,CAACgB,aAAhB,CAA8BC,eAH9B;AAIRC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqBtB,gBAAgB,CAACuB,aAAjB,CAA+BC,YAApD;AAA7B,KAJD;AAKRC,IAAAA,IAAI,EAAE;AACFC,MAAAA,sBAAsB,EAAEvB,mBADtB;AAEFwB,MAAAA,uBAAuB,EAAEvB,oBAFvB;AAGFwB,MAAAA,aAAa,EAAEvB,MAHb;AAIFwB,MAAAA,gBAAgB,EAAEtB,eAJhB;AAKFuB,MAAAA,iBAAiB,EAAExB,eALjB;AAMFyB,MAAAA,YAAY,EAAEvB,kBAAkB,CAACwB,MAAnB,CAA0BC,SAA1B,EANZ;AAOFC,MAAAA,sBAAsB,EAAEzB,2BAA2B,CAACuB,MAA5B,CAAmCC,SAAnC,EAPtB;AAQFE,MAAAA,oBAAoB,EAAEzB,yBAAyB,CAACsB,MAA1B,CAAiCC,SAAjC;AARpB,KALE;AAgBRG,IAAAA,cAAc,EAAE,MAAM;AAhBd,GAAD,CAAL,CAiBHC,IAjBG,CAiBEC,GAAG,IAAI;AACX3B,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgC2B,IAAI,CAACC,SAAL,CAAeF,GAAf,CAA5C;;AACA,QAAIA,GAAG,CAACG,MAAJ,IAAc,GAAlB,EAAsB;AAClB;AACA9B,MAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACH,KAHD,MAGK;AACD;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACH;;AACDC,IAAAA,GAAG,GAAGyB,GAAN;AACH,GA3BK,CAAN,CAPiM,CAoCjM;;AACA,SAAOzB,GAAP;AACH,CAtCD;;AAwCA,eAAeX,aAAf","sourcesContent":["import axios from 'axios';\n\n// Import constants\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants'\n\nconst addCartCanvas = async function(canvasStyleOptionId, canvasCutoutOptionId, amount, longestSidePick, backgroundColor, imageCanvasContext, eraserDeeraserCanvasContext, paintDepaintCanvasContext){\n    console.log(\"*** imageCanvas: \" + imageCanvasContext)\n    // API call: add canvas to the user cart.\n    // This function is used in different levels of the application and returns \n    // api server response.\n    let ret = null;\n\n    await axios({\n        method: 'post',\n        url:    GLOBAL_CONSTANTS.API_CALL_BASE_URL + \n                LOCAL_CONSTANTS.API_CALL_URLS.add_cart_canvas,\n        headers: { Authorization: \"Bearer \" + localStorage.getItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.access_token), },\n        data: {\n            canvas_style_option_id: canvasStyleOptionId,\n            canvas_cutout_option_id: canvasCutoutOptionId,\n            canvas_amount: amount,\n            background_color: backgroundColor,\n            longest_side_pick: longestSidePick,\n            image_canvas: imageCanvasContext.canvas.toDataURL(),\n            eraser_deeraser_canvas: eraserDeeraserCanvasContext.canvas.toDataURL(),\n            paint_depaint_canvas: paintDepaintCanvasContext.canvas.toDataURL()\n        },\n            \n        validateStatus: () => true\n    }).then(res => {\n        console.log(\"Func_addCartCanvas.js res: \" + JSON.stringify(res))\n        if (res.status != 200){\n            // Invalid request\n            console.log(\"<WARNING:Func_addCartCanvas.js>: Invalid request.\");\n        }else{\n            // Valid request\n            console.log(\"<INFO:Func_addCartCanvas.js> Access token is valid.\");\n        }\n        ret = res;\n    });\n\n    // Return after axios finished\n    return ret;\n}\n\nexport default addCartCanvas\n"]},"metadata":{},"sourceType":"module"}