{"ast":null,"code":"var _jsxFileName = \"/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_StickerPage/App_StickerPage.js\";\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './App_StickerPage.css';\nimport mergeImages from 'merge-images';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\"; // MUI\n\nimport Grid from '@mui/material/Grid';\nimport Slider from '@mui/material/Slider';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Input from '@mui/material/Input'; // Components\n\nimport StickerPageOptions from './App_StickerPageOptions'; // Import constants\n\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants'; // Function component to read the url parameter and pass it to class based component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function withRouter(Component) {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      url_parameters: useParams()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this);\n  }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n    return [useParams];\n  });\n}\n\nfunction CanvasHandler(props) {\n  // If the sticker and presentational images loaded, load the canvas\n  if (props.imgPresentationBackgroundLoaded == true && props.imgPresentationStickerLoaded == true) {\n    props.canvasContext.drawImage(props.imgPresentationBackground, 0, 0, props.width, props.height);\n    props.canvasContext.drawImage(props.imgPresentationSticker, props.width / 2 - props.stickerWidth / 2, props.height / 2 - props.stickerHeight / 2, props.stickerWidth, props.stickerHeight);\n  }\n\n  return null;\n}\n\n_c = CanvasHandler;\n\nclass StickerPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sticker_id: props.url_parameters.sticker_id,\n      stickerData: null,\n      currentSelectedMaterialIndex: 0,\n      currentSelectedStyleOptionIndex: 0,\n      currentSelectedLongestSidePick: 60,\n      currentStickerAmount: 1,\n      currentStickerPrice: 'N/A',\n      sizeTextField: \"\",\n      // Size textfield exmpl: 30 mm x 30 mm\n      stickerWidthmm: 0,\n      stickerHieghtmm: 0,\n      // Variable for dynamic sticker on presentational background\n      canvasContext: null,\n      canvasWidth: 2000,\n      // Pixel density\n      canvasHeight: 2000,\n      // Pixel density\n      PixelPermm: 0.7 * 2000 / 304.0,\n      // Manually defined \n      imgPresentationBackground: new Image(),\n      imgPresentationBackgroundLoaded: false,\n      imgPresentationSticker: new Image(),\n      imgPresentationStickerLoaded: false,\n      // Sticker parameters\n      stickerAspectRatio: 1.0,\n      stickerWidth: 0,\n      stickerHeight: 0\n    };\n    this.state.imgPresentationBackground.src = \"https://sticker-app-storage.s3.eu-central-1.amazonaws.com/Media/ProductPage/Sticker/laptop.jpg\";\n    this.onSizeSliderChange = this.onSizeSliderChange.bind(this);\n    this.onMaterialOptionClick = this.onMaterialOptionClick.bind(this);\n    this.onStyleOptionClick = this.onStyleOptionClick.bind(this);\n    this.onStickerAmountChange = this.onStickerAmountChange.bind(this);\n  }\n\n  componentDidMount() {\n    // Ask for sticker data and set backgroundUrls\n    this.updateStickerParameters(); // Set callback function on loading presentational and sticker images\n\n    const scope = this;\n\n    this.state.imgPresentationBackground.onload = function () {\n      scope.setState({\n        imgPresentationBackgroundLoaded: true\n      });\n    }; // Canvas context\n\n\n    this.updateStickerDimensions();\n    this.setState({\n      canvasContext: this.refs.canvas.getContext('2d')\n    });\n    this.updateStickerPrice();\n  }\n\n  updateStickerImage() {\n    // Set sticker image source, callback and aspect ratio\n    this.state.imgPresentationSticker.src = this.state.stickerData.material_options[this.state.currentSelectedMaterialIndex].style_options[this.state.currentSelectedStyleOptionIndex].img_combi_url;\n    const scope = this;\n    this.setState({\n      imgPresentationStickerLoaded: false\n    });\n\n    this.state.imgPresentationSticker.onload = function () {\n      scope.setState({\n        imgPresentationStickerLoaded: true\n      });\n    };\n\n    this.setState({\n      stickerAspectRatio: this.state.stickerData.material_options[this.state.currentSelectedMaterialIndex].style_options[this.state.currentSelectedStyleOptionIndex].aspect_ratio\n    });\n  }\n\n  updateStickerDimensions() {\n    // Recalculate sticker width and height based on current size picked by user\n    let stickerWidth = 0;\n    let stickerHeight = 0;\n    let stickerWidthmm = 0;\n    let stickerHeightmm = 0;\n\n    if (this.state.stickerAspectRatio >= 1) {\n      stickerWidth = this.state.currentSelectedLongestSidePick * this.state.PixelPermm;\n      stickerHeight = this.state.currentSelectedLongestSidePick * this.state.PixelPermm / this.state.stickerAspectRatio;\n      stickerWidthmm = this.state.currentSelectedLongestSidePick;\n      stickerHeightmm = this.state.currentSelectedLongestSidePick / this.state.stickerAspectRatio;\n    } else {\n      stickerWidth = this.state.currentSelectedLongestSidePick * this.state.PixelPermm * this.state.stickerAspectRatio;\n      stickerHeight = this.state.currentSelectedLongestSidePick * this.state.PixelPermm;\n      stickerWidthmm = this.state.currentSelectedLongestSidePick * this.state.stickerAspectRatio;\n      stickerHeightmm = this.state.currentSelectedLongestSidePick;\n    }\n\n    this.setState({\n      stickerWidth: stickerWidth,\n      stickerHeight: stickerHeight,\n      stickerWidthmm: Math.round((stickerWidthmm + Number.EPSILON) * 100) / 100,\n      stickerHeightmm: Math.round((stickerHeightmm + Number.EPSILON) * 100) / 100\n    });\n  }\n\n  updateStickerPrice() {\n    if (this.state.stickerData != null) {\n      let priceRaw = this.state.currentStickerAmount * this.state.currentSelectedLongestSidePick * this.state.stickerData.material_options[this.state.currentSelectedMaterialIndex].style_options[this.state.currentSelectedStyleOptionIndex].price_parameter;\n      console.log('raw price: ' + priceRaw);\n      this.setState({\n        currentStickerPrice: Math.round((priceRaw + Number.EPSILON) * 100) / 100\n      });\n    }\n  }\n\n  updateStickerParameters() {\n    // Call server api for sticker information\n    console.log(\"API REQUEST: \" + GLOBAL_CONSTANTS.API_CALL_BASE_URL + LOCAL_CONSTANTS.API_CALL_URLS.get_sticker + this.state.sticker_id + \"/\");\n    axios({\n      method: 'get',\n      url: GLOBAL_CONSTANTS.API_CALL_BASE_URL + LOCAL_CONSTANTS.API_CALL_URLS.get_sticker + this.state.sticker_id + \"/\",\n      validateStatus: () => true\n    }).then(res => {\n      console.log(\"App_StickerPage res: \" + JSON.stringify(res));\n\n      if (res.status != 200) {\n        // Invalid request\n        console.log(\"<WARNING:App_StickerPage.js>: Invalid request.\"); // On 404, redirect to homepage\n\n        if (res.status == 404) {\n          alert(\"404: Sticker doesn't exist or is inactive\");\n          window.location.replace(\"/\");\n        }\n      } else {\n        // Valid request\n        console.log(\"<INFO:App_StickerPage.js> Valid request\"); // Set default slider pick in the middle\n\n        var styleOption = res.data.material_options[this.state.currentSelectedMaterialIndex].style_options[this.state.currentSelectedStyleOptionIndex];\n        const sizeSlideMax = styleOption.maximal_side_length_mm;\n        const sizeSlideMin = Math.ceil(Math.max(styleOption.aspect_ratio, 1 / styleOption.aspect_ratio) * styleOption.minimal_side_length_mm);\n        this.setState({\n          currentSelectedLongestSidePick: Math.ceil((sizeSlideMax + sizeSlideMin) / 2)\n        }); // Save the sent information\n\n        this.setState({\n          stickerData: res.data\n        }); // Update sticker image\n\n        this.updateStickerImage(); // Update sticker dimensions\n\n        this.updateStickerDimensions(); // Update sticker price\n\n        this.updateStickerPrice();\n      }\n    });\n  }\n\n  onStickerAmountChange(value) {\n    // Set new amount of stickers and update sticker price\n    this.setState({\n      currentStickerAmount: value\n    }, function () {\n      this.updateStickerPrice();\n    });\n  }\n\n  onSizeSliderChange(value) {\n    // Save value\n    this.setState({\n      currentSelectedLongestSidePick: value\n    }); // Resize sticker\n\n    this.updateStickerDimensions();\n    this.updateStickerPrice();\n  }\n\n  onMaterialOptionClick(index) {\n    // Set current selected material option index\n    this.setState({\n      currentSelectedMaterialIndex: index\n    }, function () {\n      // Update image and price\n      this.updateStickerImage();\n      this.updateStickerDimensions(); // Recalculate price\n\n      this.updateStickerPrice();\n    });\n  }\n\n  onStyleOptionClick(index) {\n    // Set current selected style option index\n    this.setState({\n      currentSelectedStyleOptionIndex: index\n    }, function () {\n      // Update image\n      this.updateStickerImage();\n      this.updateStickerDimensions(); // Recalculate price\n\n      this.updateStickerPrice();\n    });\n  }\n\n  render() {\n    var stickerName = \"\";\n\n    if (this.state.stickerData != null) {\n      // Set sticker name\n      stickerName = this.state.stickerData.name;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stickerPageContainerWrapper\",\n      style: {\n        backgroundColor: GLOBAL_CONSTANTS.COLORS.colorA,\n        color: GLOBAL_CONSTANTS.COLORS.colorB\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: stickerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          sm: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stickerPageSideWrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stickerPageSide leftSideWrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stickerImageCollection\",\n                children: [/*#__PURE__*/_jsxDEV(CanvasHandler, {\n                  canvasContext: this.state.canvasContext // Show only when both true\n                  ,\n                  imgPresentationBackgroundLoaded: this.state.imgPresentationBackgroundLoaded,\n                  imgPresentationStickerLoaded: this.state.imgPresentationStickerLoaded // Pass images\n                  ,\n                  imgPresentationBackground: this.state.imgPresentationBackground,\n                  imgPresentationSticker: this.state.imgPresentationSticker // Canvas parameters\n                  ,\n                  width: this.state.canvasWidth,\n                  height: this.state.canvasHeight // For sticker logic\n                  ,\n                  stickerWidth: this.state.stickerWidth,\n                  stickerHeight: this.state.stickerHeight\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: \"canvas\",\n                  width: this.state.canvasWidth,\n                  height: this.state.canvasHeight\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          sm: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(StickerPageOptions, {\n            currentSelectedMaterialIndex: this.state.currentSelectedMaterialIndex,\n            currentSelectedStyleOptionIndex: this.state.currentSelectedStyleOptionIndex,\n            currentSelectedLongestSidePick: this.state.currentSelectedLongestSidePick,\n            currentStickerAmount: this.state.currentStickerAmount,\n            currentStickerPrice: this.state.currentStickerPrice,\n            stickerData: this.state.stickerData // Size textfield\n            ,\n            stickerWidthmm: this.state.stickerWidthmm,\n            stickerHeightmm: this.state.stickerHeightmm,\n            onSizeSliderChange: this.onSizeSliderChange,\n            onMaterialOptionClick: this.onMaterialOptionClick,\n            onStyleOptionClick: this.onStyleOptionClick,\n            onStickerAmountChange: this.onStickerAmountChange // Handling favorites\n            ,\n            favoriteStickersStyleOptionIds: this.props.favoriteStickersStyleOptionIds,\n            onAddStickerToFavorites: this.props.onAddStickerToFavorites,\n            onRemoveStickerFromFavorites: this.props.onRemoveStickerFromFavorites // Handling cart\n            ,\n            onAddStickerToCart: this.props.onAddStickerToCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default _c2 = withRouter(StickerPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CanvasHandler\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_StickerPage/App_StickerPage.js"],"names":["React","useEffect","ReactDOM","useSearchParams","axios","mergeImages","BrowserRouter","Router","Switch","Route","Link","useParams","Grid","Slider","TextField","Button","ThemeProvider","createTheme","Input","StickerPageOptions","GLOBAL_CONSTANTS","LOCAL_CONSTANTS","withRouter","Component","props","CanvasHandler","imgPresentationBackgroundLoaded","imgPresentationStickerLoaded","canvasContext","drawImage","imgPresentationBackground","width","height","imgPresentationSticker","stickerWidth","stickerHeight","StickerPage","constructor","state","sticker_id","url_parameters","stickerData","currentSelectedMaterialIndex","currentSelectedStyleOptionIndex","currentSelectedLongestSidePick","currentStickerAmount","currentStickerPrice","sizeTextField","stickerWidthmm","stickerHieghtmm","canvasWidth","canvasHeight","PixelPermm","Image","stickerAspectRatio","src","onSizeSliderChange","bind","onMaterialOptionClick","onStyleOptionClick","onStickerAmountChange","componentDidMount","updateStickerParameters","scope","onload","setState","updateStickerDimensions","refs","canvas","getContext","updateStickerPrice","updateStickerImage","material_options","style_options","img_combi_url","aspect_ratio","stickerHeightmm","Math","round","Number","EPSILON","priceRaw","price_parameter","console","log","API_CALL_BASE_URL","API_CALL_URLS","get_sticker","method","url","validateStatus","then","res","JSON","stringify","status","alert","window","location","replace","styleOption","data","sizeSlideMax","maximal_side_length_mm","sizeSlideMin","ceil","max","minimal_side_length_mm","value","index","render","stickerName","name","backgroundColor","COLORS","colorA","color","colorB","textAlign","favoriteStickersStyleOptionIds","onAddStickerToFavorites","onRemoveStickerFromFavorites","onAddStickerToCart"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './App_StickerPage.css';\nimport mergeImages from 'merge-images';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams\n  } from \"react-router-dom\";\n\n// MUI\nimport Grid from '@mui/material/Grid';\nimport Slider from '@mui/material/Slider';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Input from '@mui/material/Input';\n\n// Components\nimport StickerPageOptions from './App_StickerPageOptions';\n\n// Import constants\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants'\n\n\n// Function component to read the url parameter and pass it to class based component\nexport function withRouter(Component){\n    return(props)=>{\n       return <Component {...props}  url_parameters = {useParams()}/>\n   }\n }\n \n\nfunction CanvasHandler(props){\n    // If the sticker and presentational images loaded, load the canvas\n    if (props.imgPresentationBackgroundLoaded == true && \n        props.imgPresentationStickerLoaded == true){\n\n            props.canvasContext.drawImage(props.imgPresentationBackground,0,0,props.width,props.height);\n            props.canvasContext.drawImage(props.imgPresentationSticker,props.width/2-props.stickerWidth/2\n                            ,props.height/2-props.stickerHeight/2,\n                            props.stickerWidth,\n                            props.stickerHeight);\n    }\n    return(null);\n}\n\nclass StickerPage extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            sticker_id: props.url_parameters.sticker_id,\n            stickerData: null,\n            currentSelectedMaterialIndex: 0,\n            currentSelectedStyleOptionIndex: 0,\n            currentSelectedLongestSidePick: 60,\n            currentStickerAmount: 1,\n            currentStickerPrice: 'N/A',\n            sizeTextField: \"\", // Size textfield exmpl: 30 mm x 30 mm\n            stickerWidthmm: 0,\n            stickerHieghtmm: 0,\n            \n            \n            // Variable for dynamic sticker on presentational background\n            canvasContext: null,\n            canvasWidth: 2000, // Pixel density\n            canvasHeight: 2000, // Pixel density\n            PixelPermm: (0.7*2000)/304.0, // Manually defined \n            imgPresentationBackground: new Image(),\n            imgPresentationBackgroundLoaded: false,\n            imgPresentationSticker: new Image(),\n            imgPresentationStickerLoaded: false,\n            // Sticker parameters\n            stickerAspectRatio: 1.0,\n            stickerWidth: 0,\n            stickerHeight: 0,\n\n        }; \n        this.state.imgPresentationBackground.src = \"https://sticker-app-storage.s3.eu-central-1.amazonaws.com/Media/ProductPage/Sticker/laptop.jpg\";\n        this.onSizeSliderChange = this.onSizeSliderChange.bind(this);\n        this.onMaterialOptionClick = this.onMaterialOptionClick.bind(this);\n        this.onStyleOptionClick = this.onStyleOptionClick.bind(this);\n        this.onStickerAmountChange = this.onStickerAmountChange.bind(this);\n    }\n\n    componentDidMount(){\n        // Ask for sticker data and set backgroundUrls\n        this.updateStickerParameters();\n\n        // Set callback function on loading presentational and sticker images\n        const scope = this;\n        this.state.imgPresentationBackground.onload = function() {scope.setState({imgPresentationBackgroundLoaded: true});}\n        \n        // Canvas context\n        this.updateStickerDimensions();\n        this.setState({canvasContext: this.refs.canvas.getContext('2d')});\n        \n        this.updateStickerPrice();\n    }\n\n    updateStickerImage(){\n        // Set sticker image source, callback and aspect ratio\n        this.state.imgPresentationSticker.src = this.state.stickerData.material_options[this.state.currentSelectedMaterialIndex].style_options[this.state.currentSelectedStyleOptionIndex].img_combi_url\n        const scope = this;\n        this.setState({imgPresentationStickerLoaded: false});\n        this.state.imgPresentationSticker.onload = function() {scope.setState({imgPresentationStickerLoaded: true});}   \n        \n        this.setState({stickerAspectRatio: this.state.stickerData.material_options[this.state.currentSelectedMaterialIndex].style_options[this.state.currentSelectedStyleOptionIndex].aspect_ratio});\n    }\n\n    updateStickerDimensions(){\n        // Recalculate sticker width and height based on current size picked by user\n        let stickerWidth = 0;\n        let stickerHeight = 0;\n        let stickerWidthmm = 0;\n        let stickerHeightmm = 0;\n        if(this.state.stickerAspectRatio >= 1){\n            stickerWidth = this.state.currentSelectedLongestSidePick*this.state.PixelPermm;\n            stickerHeight = (this.state.currentSelectedLongestSidePick*this.state.PixelPermm)/this.state.stickerAspectRatio;\n            stickerWidthmm = this.state.currentSelectedLongestSidePick;\n            stickerHeightmm = this.state.currentSelectedLongestSidePick/this.state.stickerAspectRatio;\n        }else{\n            stickerWidth = (this.state.currentSelectedLongestSidePick*this.state.PixelPermm)*this.state.stickerAspectRatio; \n            stickerHeight = this.state.currentSelectedLongestSidePick*this.state.PixelPermm;\n            stickerWidthmm = (this.state.currentSelectedLongestSidePick)*this.state.stickerAspectRatio;\n            stickerHeightmm = this.state.currentSelectedLongestSidePick;\n        }\n        this.setState({\n            stickerWidth: stickerWidth,\n            stickerHeight: stickerHeight,\n            stickerWidthmm: Math.round((stickerWidthmm + Number.EPSILON) * 100) / 100,\n            stickerHeightmm: Math.round((stickerHeightmm + Number.EPSILON) * 100) / 100,\n        });\n    }\n\n    updateStickerPrice(){\n        if (this.state.stickerData != null){\n            let priceRaw = this.state.currentStickerAmount*this.state.currentSelectedLongestSidePick*this.state.stickerData.material_options[this.state.currentSelectedMaterialIndex].style_options[this.state.currentSelectedStyleOptionIndex].price_parameter;\n            console.log('raw price: '+ priceRaw);\n            this.setState({ currentStickerPrice: Math.round((priceRaw + Number.EPSILON) * 100) / 100});\n        }\n    }\n\n    updateStickerParameters(){\n        // Call server api for sticker information\n        console.log(\"API REQUEST: \" + GLOBAL_CONSTANTS.API_CALL_BASE_URL + \n                        LOCAL_CONSTANTS.API_CALL_URLS.get_sticker \n                        + this.state.sticker_id + \"/\");\n        \n        axios({\n            method: 'get',\n            url:    GLOBAL_CONSTANTS.API_CALL_BASE_URL + \n                    LOCAL_CONSTANTS.API_CALL_URLS.get_sticker + \n                    this.state.sticker_id + \"/\",\n            validateStatus: () => true\n        }).then(res => {\n            console.log(\"App_StickerPage res: \" + JSON.stringify(res))\n            if (res.status != 200){\n                // Invalid request\n                console.log(\"<WARNING:App_StickerPage.js>: Invalid request.\")\n                // On 404, redirect to homepage\n                if (res.status == 404){\n                    alert(\"404: Sticker doesn't exist or is inactive\")\n                    window.location.replace(\"/\");\n                }\n                \n            }else{\n                // Valid request\n                console.log(\"<INFO:App_StickerPage.js> Valid request\")\n\n                // Set default slider pick in the middle\n                var styleOption = res.data.material_options[this.state.currentSelectedMaterialIndex].style_options[this.state.currentSelectedStyleOptionIndex];\n                const sizeSlideMax = styleOption.maximal_side_length_mm;\n                const sizeSlideMin = Math.ceil(Math.max(styleOption.aspect_ratio, 1/styleOption.aspect_ratio)*styleOption.minimal_side_length_mm);\n                this.setState({ currentSelectedLongestSidePick: Math.ceil((sizeSlideMax+sizeSlideMin)/2)});\n                \n                // Save the sent information\n                this.setState({ stickerData: res.data});\n                // Update sticker image\n                this.updateStickerImage();\n                // Update sticker dimensions\n                this.updateStickerDimensions();\n                // Update sticker price\n                this.updateStickerPrice();\n            }\n        });\n    }\n\n    onStickerAmountChange(value){\n        // Set new amount of stickers and update sticker price\n        this.setState({ currentStickerAmount: value},\n            function(){\n                this.updateStickerPrice();\n            }\n        );\n    }\n\n    onSizeSliderChange(value){\n        // Save value\n        this.setState({currentSelectedLongestSidePick: value});\n        // Resize sticker\n        this.updateStickerDimensions();\n        this.updateStickerPrice();\n    }\n\n    onMaterialOptionClick(index){\n        // Set current selected material option index\n        this.setState({currentSelectedMaterialIndex: index},\n            function(){\n                // Update image and price\n                this.updateStickerImage();\n                this.updateStickerDimensions();\n                // Recalculate price\n                this.updateStickerPrice();\n            });\n    }\n    onStyleOptionClick(index){\n        // Set current selected style option index\n        this.setState({currentSelectedStyleOptionIndex: index}, \n            function(){\n                // Update image\n                this.updateStickerImage();\n                this.updateStickerDimensions();\n                // Recalculate price\n                this.updateStickerPrice();\n            });\n    }\n   \n    render() {\n\n        var stickerName = \"\";\n        if (this.state.stickerData != null){\n            // Set sticker name\n            stickerName = this.state.stickerData.name;\n        }\n\n        return (\n                <div    className='stickerPageContainerWrapper'\n                        style={{backgroundColor: GLOBAL_CONSTANTS.COLORS.colorA,\n                                color: GLOBAL_CONSTANTS.COLORS.colorB}}>\n                    <Grid container justifyContent=\"center\">  \n\n                        <Grid xs = {12}>\n                            <h2 style={{textAlign: 'center'}}\n                                >{stickerName}</h2>\n                        </Grid>\n\n                        <Grid xs = {12} sm = {12} md = {6}>\n                            <div className='stickerPageSideWrapper'>\n                                <div className='stickerPageSide leftSideWrapper'>\n                                    <div className='stickerImageCollection'>\n                                        \n                                        <CanvasHandler\n                                            canvasContext={this.state.canvasContext}\n                                            // Show only when both true\n                                            imgPresentationBackgroundLoaded={this.state.imgPresentationBackgroundLoaded}\n                                            imgPresentationStickerLoaded={this.state.imgPresentationStickerLoaded}\n                                            // Pass images\n                                            imgPresentationBackground={this.state.imgPresentationBackground}\n                                            imgPresentationSticker={this.state.imgPresentationSticker}\n                                            // Canvas parameters\n                                            width={this.state.canvasWidth}\n                                            height={this.state.canvasHeight}\n                                            // For sticker logic\n                                            stickerWidth={this.state.stickerWidth}\n                                            stickerHeight={this.state.stickerHeight}\n                                        />\n                                        <canvas ref=\"canvas\" width={this.state.canvasWidth} height={this.state.canvasHeight}></canvas>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </Grid>\n\n                        <Grid xs = {12} sm = {12} md = {6}>\n                            <StickerPageOptions\n                                currentSelectedMaterialIndex = {this.state.currentSelectedMaterialIndex}\n                                currentSelectedStyleOptionIndex = {this.state.currentSelectedStyleOptionIndex}\n                                currentSelectedLongestSidePick = {this.state.currentSelectedLongestSidePick}\n                                currentStickerAmount = {this.state.currentStickerAmount}\n                                currentStickerPrice = {this.state.currentStickerPrice}\n                                stickerData = {this.state.stickerData}\n                                // Size textfield\n                                stickerWidthmm = {this.state.stickerWidthmm}\n                                stickerHeightmm = {this.state.stickerHeightmm}\n        \n                                \n                                onSizeSliderChange = {this.onSizeSliderChange}\n                                onMaterialOptionClick = {this.onMaterialOptionClick}\n                                onStyleOptionClick = {this.onStyleOptionClick}\n                                onStickerAmountChange = {this.onStickerAmountChange}\n\n                                // Handling favorites\n                                favoriteStickersStyleOptionIds={this.props.favoriteStickersStyleOptionIds}\n                                onAddStickerToFavorites={this.props.onAddStickerToFavorites}\n                                onRemoveStickerFromFavorites={this.props.onRemoveStickerFromFavorites}\n                                // Handling cart\n                                onAddStickerToCart={this.props.onAddStickerToCart}\n                            />\n                        </Grid>\n                    </Grid>\n                </div>\n        );\n    }    \n}\n\nexport default withRouter(StickerPage)\n"]},"metadata":{},"sourceType":"module"}