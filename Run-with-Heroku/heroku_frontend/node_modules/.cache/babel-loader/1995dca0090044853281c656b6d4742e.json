{"ast":null,"code":"import axios from 'axios'; // Import constants\n\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants';\n\nconst createOrder = async function (full_name, email, country, street, city, postal_code, telephone_number, information_for_delivery) {\n  // API call: add sticker to the user cart.\n  // This function is used in different levels of the application and returns \n  // api server response.\n  let ret = null;\n  await axios({\n    method: 'post',\n    url: GLOBAL_CONSTANTS.API_CALL_BASE_URL + LOCAL_CONSTANTS.API_CALL_URLS.create_order,\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.access_token)\n    },\n    data: {\n      full_name: full_name,\n      email: email,\n      country: country,\n      street: street,\n      city: city,\n      postal_code: postal_code,\n      telephone_number: telephone_number,\n      information_for_delivery: information_for_delivery\n    },\n    validateStatus: () => true\n  }).then(res => {\n    console.log(\"Func_createOrder.js res: \" + JSON.stringify(res));\n\n    if (res.status != 200) {\n      // Invalid request\n      console.log(\"<WARNING:Func_createOrder.js>: Invalid request.\");\n    } else {\n      // Valid request\n      console.log(\"<INFO:Func_createOrder.js> Access token is valid.\");\n    }\n\n    ret = res;\n  }); // Return after axios finished\n\n  return ret;\n};\n\nexport default createOrder;","map":{"version":3,"sources":["/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_Order/Func_createOrder.js"],"names":["axios","GLOBAL_CONSTANTS","LOCAL_CONSTANTS","createOrder","full_name","email","country","street","city","postal_code","telephone_number","information_for_delivery","ret","method","url","API_CALL_BASE_URL","API_CALL_URLS","create_order","headers","Authorization","localStorage","getItem","LOCAL_STORAGE","access_token","data","validateStatus","then","res","console","log","JSON","stringify","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,KAAKC,gBAAZ,MAAkC,uBAAlC;AACA,OAAO,KAAKC,eAAZ,MAAiC,kBAAjC;;AAEA,MAAMC,WAAW,GAAG,gBAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,IAAlD,EAAwDC,WAAxD,EAAqEC,gBAArE,EAAuFC,wBAAvF,EAAgH;AAChI;AACA;AACA;AACA,MAAIC,GAAG,GAAG,IAAV;AAEA,QAAMZ,KAAK,CAAC;AACRa,IAAAA,MAAM,EAAE,MADA;AAERC,IAAAA,GAAG,EAAKb,gBAAgB,CAACc,iBAAjB,GACAb,eAAe,CAACc,aAAhB,CAA8BC,YAH9B;AAIRC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqBpB,gBAAgB,CAACqB,aAAjB,CAA+BC,YAApD;AAA7B,KAJD;AAKRC,IAAAA,IAAI,EAAE;AACFpB,MAAAA,SAAS,EAAEA,SADT;AAEFC,MAAAA,KAAK,EAAEA,KAFL;AAGFC,MAAAA,OAAO,EAAEA,OAHP;AAIFC,MAAAA,MAAM,EAAEA,MAJN;AAKFC,MAAAA,IAAI,EAAEA,IALJ;AAMFC,MAAAA,WAAW,EAAEA,WANX;AAOFC,MAAAA,gBAAgB,EAAEA,gBAPhB;AAQFC,MAAAA,wBAAwB,EAAEA;AARxB,KALE;AAeRc,IAAAA,cAAc,EAAE,MAAM;AAfd,GAAD,CAAL,CAgBHC,IAhBG,CAgBEC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAA1C;;AACA,QAAIA,GAAG,CAACK,MAAJ,IAAc,GAAlB,EAAsB;AAClB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACH,KAHD,MAGK;AACD;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACH;;AACDjB,IAAAA,GAAG,GAAGe,GAAN;AACH,GA1BK,CAAN,CANgI,CAkChI;;AACA,SAAOf,GAAP;AACH,CApCD;;AAsCA,eAAeT,WAAf","sourcesContent":["import axios from 'axios';\n\n// Import constants\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants'\n\nconst createOrder = async function(full_name, email, country, street, city, postal_code, telephone_number, information_for_delivery){\n    // API call: add sticker to the user cart.\n    // This function is used in different levels of the application and returns \n    // api server response.\n    let ret = null;\n\n    await axios({\n        method: 'post',\n        url:    GLOBAL_CONSTANTS.API_CALL_BASE_URL + \n                LOCAL_CONSTANTS.API_CALL_URLS.create_order,\n        headers: { Authorization: \"Bearer \" + localStorage.getItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.access_token) },\n        data: {\n            full_name: full_name,\n            email: email,\n            country: country,\n            street: street,\n            city: city,\n            postal_code: postal_code,\n            telephone_number: telephone_number,\n            information_for_delivery: information_for_delivery\n        },\n        validateStatus: () => true\n    }).then(res => {\n        console.log(\"Func_createOrder.js res: \" + JSON.stringify(res))\n        if (res.status != 200){\n            // Invalid request\n            console.log(\"<WARNING:Func_createOrder.js>: Invalid request.\");\n        }else{\n            // Valid request\n            console.log(\"<INFO:Func_createOrder.js> Access token is valid.\");\n        }\n        ret = res;\n    });\n\n    // Return after axios finished\n    return ret;\n}\n\nexport default createOrder\n"]},"metadata":{},"sourceType":"module"}