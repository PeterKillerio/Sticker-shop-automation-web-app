{"ast":null,"code":"var _jsxFileName = \"/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_Order/App_Order.js\";\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './App_Order.css';\nimport mergeImages from 'merge-images';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\nimport { Navigate } from \"react-router-dom\"; // MUI\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton'; // Import constants\n\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants'; // Import api functions\n\nimport getCreateOrderPage from './Func_getCreateOrderPage';\nimport createOrder from './Func_createOrder'; // Components\n// import CartList from './App_CartList'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Order extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      finalPrice: 0,\n      itemCount: 0,\n      // Form error handling data\n      popupErrorFullName: \"\",\n      popupErrorEmail: \"\",\n      popupErrorCountry: \"\",\n      popupErrorStreet: \"\",\n      popupErrorCity: \"\",\n      popupErrorPostalCode: \"\",\n      popupErrorTelephoneNumber: \"\",\n      popupErrorInformationForDelivery: \"\",\n      popupErrorGeneral: \"\",\n      // Form handling data\n      full_name: '',\n      email: '',\n      country: '',\n      country: '',\n      city: '',\n      postal_code: '',\n      telephone_number: '',\n      information_for_delivery: ''\n    };\n  }\n\n  componentDidMount() {\n    this.updateOrderFinalPrice();\n  }\n\n  handleInputChange(event, stateName) {\n    this.setState({\n      [stateName]: event.target.value\n    });\n  }\n\n  changePopupErrorText(errorVariable, text) {\n    console.log(\"text: \" + text);\n    this.setState({\n      [errorVariable]: text\n    });\n  }\n\n  updateOrderFinalPrice() {\n    const scope = this; // Custom response function\n\n    getCreateOrderPage().then(function (ret) {\n      if (ret.status == 200) {\n        // 200 OK status code\n        scope.setState({\n          finalPrice: ret.data.finalPrice\n        });\n        scope.setState({\n          itemCount: ret.data.itemCount\n        });\n      }\n    });\n  }\n\n  onCreateOrder(event) {\n    event.preventDefault(); // Use api function core and add own functionality\n    // Create scope variable to be used inside .then function\n\n    const scope = this; // Custom response function\n\n    createOrder(this.state.full_name, this.state.email, this.state.country, this.state.street, this.state.city, this.state.postal_code, this.state.telephone_number, this.state.information_for_delivery).then(function (ret) {\n      // Set favorite stickers\n      console.log(\"#$#$#$ret.status: \" + ret.status);\n\n      if (ret.status != 200 && ret.status != 201) {\n        // 200 OK status code\n        // Set error messages appropriatelly \n        if (ret.data.full_name) {\n          scope.changePopupErrorText(\"popupErrorFullName\", ret.data.full_name);\n        }\n\n        if (ret.data.email) {\n          scope.changePopupErrorText(\"popupErrorEmail\", ret.data.email);\n        }\n\n        if (ret.data.country) {\n          scope.changePopupErrorText(\"popupErrorCountry\", ret.data.country);\n        }\n\n        if (ret.data.street) {\n          scope.changePopupErrorText(\"popupErrorStreet\", ret.data.street);\n        }\n\n        if (ret.data.city) {\n          scope.changePopupErrorText(\"popupErrorCity\", ret.data.city);\n        }\n\n        if (ret.data.postal_code) {\n          scope.changePopupErrorText(\"popupErrorPostalCode\", ret.data.postal_code);\n        }\n\n        if (ret.data.telephone_number) {\n          scope.changePopupErrorText(\"popupErrorTelephoneNumber\", ret.data.telephone_number);\n        }\n\n        if (ret.data.information_for_delivery) {\n          scope.changePopupErrorText(\"popupErrorInformationForDelivery\", ret.data.information_for_delivery);\n        }\n\n        if (ret.data.detail) {\n          scope.changePopupErrorText(\"popupErrorGeneral\", ret.data.detail);\n        }\n      } else {\n        // Valid request\n        console.log(\"<INFO:Func_createOrder.js> Access token is valid.\"); // Redirect to home\n\n        window.location.href = \"/\";\n      }\n    });\n  }\n\n  resetPopupErrorTexts() {\n    this.setState({\n      popupErrorFullName: \"\",\n      popupErrorEmail: \"\",\n      popupErrorCountry: \"\",\n      popupErrorStreet: \"\",\n      popupErrorCity: \"\",\n      popupErrorPostalCode: \"\",\n      popupErrorTelephoneNumber: \"\",\n      popupErrorInformationForDelivery: \"\",\n      popupErrorGeneral: \"\"\n    });\n    return null;\n  }\n\n  optionTextField(popupErrorText, label, onChangeVariable, fieldRequiered) {\n    let ConditionalTextField = null;\n\n    if (fieldRequiered == true) {\n      ConditionalTextField = /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          input: {\n            color: GLOBAL_CONSTANTS.COLORS.colorB\n          }\n        },\n        required: true,\n        id: \"outlined-required\",\n        label: label,\n        focused: true,\n        onChange: event => this.handleInputChange(event, onChangeVariable)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this);\n    } else {\n      ConditionalTextField = /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          input: {\n            color: GLOBAL_CONSTANTS.COLORS.colorB\n          }\n        },\n        id: \"outlined-required\",\n        label: label,\n        focused: true,\n        onChange: event => this.handleInputChange(event, onChangeVariable)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"popupErrorInfoText\",\n            style: {\n              color: GLOBAL_CONSTANTS.COLORS.colorC,\n              textAlign: 'center'\n            },\n            children: popupErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textFieldWrapper\",\n            children: ConditionalTextField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    if (this.state.itemCount) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          backgroundColor: GLOBAL_CONSTANTS.COLORS.colorA,\n          color: GLOBAL_CONSTANTS.COLORS.colorB\n        },\n        className: \"orderWrapper\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          className: \"formWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: event => {\n              this.onCreateOrder(event);\n              this.resetPopupErrorTexts();\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              style: {\n                backgroundColor: GLOBAL_CONSTANTS.COLORS.colorA\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                className: \"orderHeaderWrapper\",\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"Finalize your order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this), this.optionTextField(this.state.popupErrorFullName, \"Full name\", \"full_name\", true), this.optionTextField(this.state.popupErrorEmail, \"Email\", \"email\", true), this.optionTextField(this.state.popupErrorCountry, \"Country\", \"country\", true), this.optionTextField(this.state.popupErrorStreet, \"Street\", \"street\", true), this.optionTextField(this.state.popupErrorCity, \"City\", \"city\", true), this.optionTextField(this.state.popupErrorPostalCode, \"Postal code\", \"postal_code\", true), this.optionTextField(this.state.popupErrorTelephoneNumber, \"Telephone number\", \"telephone_number\", true), this.optionTextField(this.state.popupErrorInformationForDelivery, \"Information for delivery\", \"information_for_delivery\", false), /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"To be paid: \", this.state.finalPrice, \" \\u20AC\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"popupErrorInfoText\",\n                  style: {\n                    color: GLOBAL_CONSTANTS.COLORS.colorC,\n                    textAlign: 'center'\n                  },\n                  children: this.state.popupErrorGeneral\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  style: {\n                    border: '1px solid ' + GLOBAL_CONSTANTS.COLORS.colorB\n                  },\n                  type: \"submit\",\n                  sx: {\n                    borderRadius: 28\n                  },\n                  children: \"Continue and pay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          backgroundColor: GLOBAL_CONSTANTS.COLORS.colorA,\n          color: GLOBAL_CONSTANTS.COLORS.colorB\n        },\n        className: \"orderWrapper\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your cart is empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_Order/App_Order.js"],"names":["React","useEffect","ReactDOM","useSearchParams","axios","mergeImages","BrowserRouter","Router","Switch","Route","Link","useParams","Navigate","Grid","Button","ThemeProvider","createTheme","TextField","IconButton","GLOBAL_CONSTANTS","LOCAL_CONSTANTS","getCreateOrderPage","createOrder","Order","Component","constructor","props","state","finalPrice","itemCount","popupErrorFullName","popupErrorEmail","popupErrorCountry","popupErrorStreet","popupErrorCity","popupErrorPostalCode","popupErrorTelephoneNumber","popupErrorInformationForDelivery","popupErrorGeneral","full_name","email","country","city","postal_code","telephone_number","information_for_delivery","componentDidMount","updateOrderFinalPrice","handleInputChange","event","stateName","setState","target","value","changePopupErrorText","errorVariable","text","console","log","scope","then","ret","status","data","onCreateOrder","preventDefault","street","detail","window","location","href","resetPopupErrorTexts","optionTextField","popupErrorText","label","onChangeVariable","fieldRequiered","ConditionalTextField","input","color","COLORS","colorB","colorC","textAlign","render","backgroundColor","colorA","border","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './App_Order.css';\nimport mergeImages from 'merge-images';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams\n  } from \"react-router-dom\";\nimport { Navigate } from \"react-router-dom\";\n\n// MUI\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\n\n// Import constants\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants'\n\n// Import api functions\nimport getCreateOrderPage from './Func_getCreateOrderPage';\nimport createOrder from './Func_createOrder';\n\n// Components\n// import CartList from './App_CartList'\n\n\nclass Order extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            finalPrice: 0,\n            itemCount: 0,\n            \n            // Form error handling data\n            popupErrorFullName: \"\",\n            popupErrorEmail: \"\",\n            popupErrorCountry: \"\",\n            popupErrorStreet: \"\",\n            popupErrorCity: \"\",\n            popupErrorPostalCode: \"\",\n            popupErrorTelephoneNumber: \"\",\n            popupErrorInformationForDelivery: \"\",\n            popupErrorGeneral: \"\",\n\n            // Form handling data\n            full_name: '',\n            email: '',\n            country: '',\n            country: '',\n            city: '',\n            postal_code: '',\n            telephone_number: '',\n            information_for_delivery: '',\n\n            \n        }\n    }\n\n    componentDidMount(){\n        this.updateOrderFinalPrice();\n    }\n\n\n    handleInputChange(event, stateName) { this.setState({[stateName]:event.target.value});}\n\n    changePopupErrorText(errorVariable, text){\n        console.log(\"text: \" + text);\n        this.setState({[errorVariable]: text});\n    }\n\n    updateOrderFinalPrice(){\n        const scope = this;\n        // Custom response function\n        getCreateOrderPage().then(function(ret){\n            if (ret.status == 200){ // 200 OK status code\n                scope.setState({ finalPrice: ret.data.finalPrice});\n                scope.setState({ itemCount: ret.data.itemCount});\n            }\n        });\n    }\n\n    onCreateOrder(event){\n        event.preventDefault();\n\n        // Use api function core and add own functionality\n        // Create scope variable to be used inside .then function\n        const scope = this;\n        // Custom response function\n        createOrder(\n            this.state.full_name, \n            this.state.email, \n            this.state.country, \n            this.state.street, \n            this.state.city, \n            this.state.postal_code, \n            this.state.telephone_number, \n            this.state.information_for_delivery\n        ).then(function(ret){\n            // Set favorite stickers\n            console.log(\"#$#$#$ret.status: \" + ret.status)\n            if (ret.status != 200 && ret.status != 201){ // 200 OK status code\n                // Set error messages appropriatelly \n                if (ret.data.full_name){scope.changePopupErrorText(\"popupErrorFullName\", ret.data.full_name);}\n                if (ret.data.email){scope.changePopupErrorText(\"popupErrorEmail\", ret.data.email);}\n                if (ret.data.country){scope.changePopupErrorText(\"popupErrorCountry\", ret.data.country);}\n                if (ret.data.street){scope.changePopupErrorText(\"popupErrorStreet\", ret.data.street);}\n                if (ret.data.city){scope.changePopupErrorText(\"popupErrorCity\", ret.data.city);}\n                if (ret.data.postal_code){scope.changePopupErrorText(\"popupErrorPostalCode\", ret.data.postal_code);}\n                if (ret.data.telephone_number){scope.changePopupErrorText(\"popupErrorTelephoneNumber\", ret.data.telephone_number);}\n                if (ret.data.information_for_delivery){scope.changePopupErrorText(\"popupErrorInformationForDelivery\", ret.data.information_for_delivery);}\n                if (ret.data.detail){scope.changePopupErrorText(\"popupErrorGeneral\", ret.data.detail);}\n                \n            }else{\n                // Valid request\n                console.log(\"<INFO:Func_createOrder.js> Access token is valid.\");\n                // Redirect to home\n                window.location.href = \"/\";\n            }\n        });\n    }\n\n    resetPopupErrorTexts(){\n        this.setState({\n            popupErrorFullName: \"\",\n            popupErrorEmail: \"\",\n            popupErrorCountry: \"\",\n            popupErrorStreet: \"\",\n            popupErrorCity: \"\",\n            popupErrorPostalCode: \"\",\n            popupErrorTelephoneNumber: \"\",\n            popupErrorInformationForDelivery: \"\",\n            popupErrorGeneral: \"\"\n        });\n        return(null);\n    }\n\n\n    optionTextField(popupErrorText, label, onChangeVariable, fieldRequiered){\n\n        let ConditionalTextField = null;\n\n        if(fieldRequiered == true){\n            ConditionalTextField = \n                <TextField\n                    sx={{ input: { color: GLOBAL_CONSTANTS.COLORS.colorB } }}\n                    required\n                    id=\"outlined-required\"\n                    label={label}\n                    focused\n                    onChange={(event) => this.handleInputChange(event,onChangeVariable)}\n                />\n        }else{\n            ConditionalTextField =\n                <TextField\n                    sx={{ input: { color: GLOBAL_CONSTANTS.COLORS.colorB } }}\n                    id=\"outlined-required\"\n                    label={label}\n                    focused\n                    onChange={(event) => this.handleInputChange(event,onChangeVariable)}\n                />\n        }\n\n        return(\n            <Grid xs={12}>\n                <Grid container>\n                    <Grid xs={12}> \n                        <p  className='popupErrorInfoText' \n                            style={{color: GLOBAL_CONSTANTS.COLORS.colorC, textAlign: 'center'}}>\n                            {popupErrorText}\n                        </p>\n                    </Grid>\n\n                    <Grid xs={12}> \n                        <div className='textFieldWrapper'>\n                            {ConditionalTextField}\n                        </div>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n\n    render() {\n\n        if(this.state.itemCount){\n            return (\n                <Grid container style={{backgroundColor: GLOBAL_CONSTANTS.COLORS.colorA, color: GLOBAL_CONSTANTS.COLORS.colorB}}\n                    className=\"orderWrapper\">   \n\n                    \n\n                    <Grid xs={12} className=\"formWrapper\"> \n                        <form \n                            onSubmit={(event) => { this.onCreateOrder(event); this.resetPopupErrorTexts(); }}\n                            >\n                            <Grid   container style={{backgroundColor: GLOBAL_CONSTANTS.COLORS.colorA}}> \n                                <Grid xs={12} className=\"orderHeaderWrapper\">\n                                    <h1>Finalize your order</h1>\n                                </Grid>\n\n                                {/* full_name */}\n                                \n                                {this.optionTextField(this.state.popupErrorFullName, \"Full name\", \"full_name\", true)}\n                                \n                                {/* email */}\n                                {this.optionTextField(this.state.popupErrorEmail, \"Email\", \"email\", true)}\n\n                                {/* country */}\n                                {this.optionTextField(this.state.popupErrorCountry, \"Country\", \"country\", true)}\n\n                                {/* street */}\n                                {this.optionTextField(this.state.popupErrorStreet, \"Street\", \"street\", true)}\n\n                                {/* city */}\n                                {this.optionTextField(this.state.popupErrorCity, \"City\", \"city\", true)}\n\n                                {/* postal_code */}\n                                {this.optionTextField(this.state.popupErrorPostalCode, \"Postal code\", \"postal_code\", true)}\n\n                                {/* telephone_number */}\n                                {this.optionTextField(this.state.popupErrorTelephoneNumber, \"Telephone number\", \"telephone_number\", true)}\n\n                                {/* information_for_delivery */}\n                                {this.optionTextField(this.state.popupErrorInformationForDelivery, \"Information for delivery\", \"information_for_delivery\", false)}\n\n                                <Grid xs={12}>\n                                    <p>To be paid: {this.state.finalPrice} €</p>\n                                </Grid>\n\n                                {/* Addotional error */}\n                                <Grid xs={12}> \n                                    <p  className='popupErrorInfoText' \n                                        style={{color: GLOBAL_CONSTANTS.COLORS.colorC, textAlign: 'center'}}>\n                                        {this.state.popupErrorGeneral}\n                                    </p>\n                                </Grid>\n\n                                <Grid xs={12}> \n                                    <Button variant=\"contained\"\n                                        style={{border: '1px solid ' + GLOBAL_CONSTANTS.COLORS.colorB}}\n                                        type=\"submit\"\n                                        sx={{ borderRadius: 28 }}\n                                        >\n                                        Continue and pay\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Grid>\n                </Grid>\n            );\n        }else{\n            return (\n                <Grid container style={{backgroundColor: GLOBAL_CONSTANTS.COLORS.colorA, color: GLOBAL_CONSTANTS.COLORS.colorB}}\n                    className=\"orderWrapper\">   \n                    <Grid xs={12} style={{textAlign: \"center\"}}>\n                        <p>Your cart is empty</p>\n                    </Grid>\n                </Grid>\n            );\n        }\n    }    \n}\n\n\n\nexport default Order\n"]},"metadata":{},"sourceType":"module"}