{"ast":null,"code":"var _jsxFileName = \"/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_Navigation/App_Navigation.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './App_Navigation.css'; // MUI \n\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton'; // Import react components  \n\nimport MobileNavigationMenu from './App_Navigation_MobileNavigationMenu';\nimport DekstopNavigationMenu from './App_Navigation_DesktopNavigationMenu';\nimport PopupBuilder from './Popups/Builder/App_Navigation_PopupFormBuilder'; // Import constatns\n\nimport * as GLOBAL_CONSTANTS from './../../GlobalConstants'; // Functions\n\nimport getFavoriteStickers from '../App_Favorites/Func_getFavoriteStickers'; // Logic for displaying login popup\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPopupHandler(props) {\n  if (props.visible) {\n    return /*#__PURE__*/_jsxDEV(PopupBuilder, {\n      type: \"login\",\n      onCloseClick: props.onCloseClick,\n      onForgotPasswordClick: props.onForgotPasswordClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n} // // Logic for displaying register popup\n\n\n_c = LoginPopupHandler;\n\nfunction RegisterPopupHandler(props) {\n  if (props.visible) {\n    return /*#__PURE__*/_jsxDEV(PopupBuilder, {\n      type: \"register\",\n      onCloseClick: props.onCloseClick,\n      onSuccessfulRegistration: props.onSuccessfulRegistration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n} // // Logic for displaying reset password popup\n\n\n_c2 = RegisterPopupHandler;\n\nfunction ResetPasswordPopupHandler(props) {\n  if (props.visible) {\n    return /*#__PURE__*/_jsxDEV(PopupBuilder, {\n      type: \"resetpassword\",\n      onCloseClick: props.onCloseClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n} // Logic for displaying mobile menu\n\n\n_c3 = ResetPasswordPopupHandler;\n\nfunction MobileNavigationMenuHandler(props) {\n  if (props.visible) {\n    return /*#__PURE__*/_jsxDEV(MobileNavigationMenu, {\n      onClickMobileMenu: props.onClickMobileMenu // Toggle for burger menu\n      ,\n      onClickLoginPopup: props.onClickLoginPopup // Toggle for login popup\n      ,\n      onClickRegisterPopup: props.onClickRegisterPopup // Toggle for login popup\n      ,\n      onClickResetPasswordPopup: props.onClickResetPasswordPopup // Toggle for reset password popup\n      ,\n      onClickLogout: props.onClickLogout,\n      favoritesBadgeNumber: props.favoritesBadgeNumber,\n      cartBadgeNumber: props.cartBadgeNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n} // Main navigation component\n\n\n_c4 = MobileNavigationMenuHandler;\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobileMenuVisible: false,\n      loginPopupVisible: false,\n      registerPopupVisible: false,\n      resetPasswordPopupVisible: false,\n      favoriteStickerItems: []\n    };\n    this.toggleMobileMenu = this.toggleMobileMenu.bind(this);\n    this.toggleLoginPopup = this.toggleLoginPopup.bind(this);\n    this.toggleRegisterPopup = this.toggleRegisterPopup.bind(this);\n    this.toggleResetPasswordPopup = this.toggleResetPasswordPopup.bind(this);\n    this.handleForgotPassword = this.handleForgotPassword.bind(this);\n    this.handleSuccessfulRegistration = this.handleSuccessfulRegistration.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  toggleMobileMenu() {\n    console.log('MOBILE MENU TOGGLED ' + this.state.mobileMenuVisible);\n    this.setState({\n      mobileMenuVisible: !this.state.mobileMenuVisible\n    });\n  }\n\n  toggleLoginPopup() {\n    console.log('LOGIN POPUP TOGGLED ' + this.state.loginPopupVisible);\n    this.setState({\n      loginPopupVisible: !this.state.loginPopupVisible\n    });\n  }\n\n  toggleRegisterPopup() {\n    console.log('REGISTER POPUP TOGGLED ' + this.state.registerPopupVisible);\n    this.setState({\n      registerPopupVisible: !this.state.registerPopupVisible\n    });\n  }\n\n  toggleResetPasswordPopup() {\n    console.log('RESET PASSWORD POPUP TOGGLED ' + this.state.resetPasswordPopupVisible);\n    this.setState({\n      resetPasswordPopupVisible: !this.state.resetPasswordPopupVisible\n    });\n  }\n\n  handleForgotPassword() {\n    // Close login popup with the forgot password button and open forgot password popup\n    this.setState({\n      loginPopupVisible: false\n    });\n    this.setState({\n      resetPasswordPopupVisible: true\n    });\n  }\n\n  handleSuccessfulRegistration() {\n    // Close registartion window and open login window\n    this.setState({\n      registerPopupVisible: false\n    });\n    this.setState({\n      loginPopupVisible: true\n    });\n  }\n\n  handleLogout() {\n    // Remove tokens, is_temp variable, username and refresh the page \n    localStorage.removeItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.access_token);\n    localStorage.removeItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.refresh_token);\n    localStorage.setItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.is_temp, true);\n    localStorage.removeItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.username);\n    window.location.reload(false); // Refresh page\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(LoginPopupHandler, {\n          visible: this.state.loginPopupVisible,\n          onCloseClick: this.toggleLoginPopup // Toggle for close menu\n          ,\n          onForgotPasswordClick: this.handleForgotPassword // Open forgot password popup\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RegisterPopupHandler, {\n          visible: this.state.registerPopupVisible,\n          onCloseClick: this.toggleRegisterPopup // Toggle for close menu\n          ,\n          onSuccessfulRegistration: this.handleSuccessfulRegistration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ResetPasswordPopupHandler, {\n          visible: this.state.resetPasswordPopupVisible,\n          onCloseClick: this.toggleResetPasswordPopup // Toggle for close menu\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MobileNavigationMenuHandler, {\n          visible: this.state.mobileMenuVisible,\n          favoritesBadgeNumber: this.props.favoriteStickersStyleOptionIds.length,\n          cartBadgeNumber: this.props.totalCartItems,\n          onClickMobileMenu: this.toggleMobileMenu // Toggle for burger menu\n          ,\n          onClickLoginPopup: this.toggleLoginPopup // Toggle for login popup\n          ,\n          onClickRegisterPopup: this.toggleRegisterPopup // Toggle for login popup\n          ,\n          onClickResetPasswordPopup: this.toggleResetPasswordPopup // Toggle for reset password popup\n          ,\n          onClickLogout: this.handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DekstopNavigationMenu, {\n          favoritesBadgeNumber: this.props.favoriteStickersStyleOptionIds.length,\n          cartBadgeNumber: this.props.totalCartItems,\n          onClickMobileMenu: this.toggleMobileMenu // Toggle for burger menu\n          ,\n          onClickLoginPopup: this.toggleLoginPopup // Toggle for login popup\n          ,\n          onClickRegisterPopup: this.toggleRegisterPopup // Toggle for login popup\n          ,\n          onClickResetPasswordPopup: this.toggleResetPasswordPopup // Toggle for reset password popup\n          ,\n          onClickLogout: this.handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Navigation;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"LoginPopupHandler\");\n$RefreshReg$(_c2, \"RegisterPopupHandler\");\n$RefreshReg$(_c3, \"ResetPasswordPopupHandler\");\n$RefreshReg$(_c4, \"MobileNavigationMenuHandler\");","map":{"version":3,"sources":["/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_Navigation/App_Navigation.js"],"names":["React","ReactDOM","useNavigate","Link","axios","styled","Box","Grid","IconButton","MobileNavigationMenu","DekstopNavigationMenu","PopupBuilder","GLOBAL_CONSTANTS","getFavoriteStickers","LoginPopupHandler","props","visible","onCloseClick","onForgotPasswordClick","RegisterPopupHandler","onSuccessfulRegistration","ResetPasswordPopupHandler","MobileNavigationMenuHandler","onClickMobileMenu","onClickLoginPopup","onClickRegisterPopup","onClickResetPasswordPopup","onClickLogout","favoritesBadgeNumber","cartBadgeNumber","Navigation","Component","constructor","state","mobileMenuVisible","loginPopupVisible","registerPopupVisible","resetPasswordPopupVisible","favoriteStickerItems","toggleMobileMenu","bind","toggleLoginPopup","toggleRegisterPopup","toggleResetPasswordPopup","handleForgotPassword","handleSuccessfulRegistration","handleLogout","console","log","setState","localStorage","removeItem","LOCAL_STORAGE","access_token","refresh_token","setItem","is_temp","username","window","location","reload","render","flexGrow","favoriteStickersStyleOptionIds","length","totalCartItems"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './App_Navigation.css';\n\n// MUI \nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton';\n\n// Import react components  \nimport MobileNavigationMenu from './App_Navigation_MobileNavigationMenu';\nimport DekstopNavigationMenu from './App_Navigation_DesktopNavigationMenu';\nimport PopupBuilder from './Popups/Builder/App_Navigation_PopupFormBuilder';\n\n// Import constatns\nimport * as GLOBAL_CONSTANTS from './../../GlobalConstants'\n\n// Functions\nimport getFavoriteStickers from '../App_Favorites/Func_getFavoriteStickers';\n\n\n// Logic for displaying login popup\nfunction LoginPopupHandler(props){\n    if (props.visible) {\n        return (\n            <PopupBuilder\n                type = 'login'\n                \n                onCloseClick = {props.onCloseClick}\n                onForgotPasswordClick = {props.onForgotPasswordClick}\n            />\n            );\n    }else{\n        return null;\n    }\n}\n\n// // Logic for displaying register popup\nfunction RegisterPopupHandler(props){\n    if (props.visible) {\n        return (\n            <PopupBuilder\n                type = 'register'\n                \n                onCloseClick = {props.onCloseClick}\n                onSuccessfulRegistration = {props.onSuccessfulRegistration}\n            />\n            );\n    }else{\n        return null;\n    }\n}\n\n// // Logic for displaying reset password popup\nfunction ResetPasswordPopupHandler(props){\n    if (props.visible) {\n        return (\n            <PopupBuilder\n                type = 'resetpassword'\n\n                onCloseClick = {props.onCloseClick}\n            />\n            );\n    }else{\n        return null;\n    }\n}\n\n// Logic for displaying mobile menu\nfunction MobileNavigationMenuHandler(props){\n    if (props.visible) {\n        return (\n            <MobileNavigationMenu\n                onClickMobileMenu = {props.onClickMobileMenu}  // Toggle for burger menu\n                onClickLoginPopup = {props.onClickLoginPopup}  // Toggle for login popup\n                onClickRegisterPopup = {props.onClickRegisterPopup}  // Toggle for login popup\n                onClickResetPasswordPopup = {props.onClickResetPasswordPopup}  // Toggle for reset password popup\n                onClickLogout = {props.onClickLogout}\n\n                favoritesBadgeNumber = {props.favoritesBadgeNumber}\n                cartBadgeNumber = {props.cartBadgeNumber}\n            />\n            );\n    }else{\n        return null;\n    }\n}\n\n\n// Main navigation component\nclass Navigation extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            mobileMenuVisible: false,\n            loginPopupVisible: false,\n            registerPopupVisible: false,\n            resetPasswordPopupVisible: false,\n\n            favoriteStickerItems: [],\n        };\n        this.toggleMobileMenu = this.toggleMobileMenu.bind(this);\n        this.toggleLoginPopup = this.toggleLoginPopup.bind(this);\n        this.toggleRegisterPopup = this.toggleRegisterPopup.bind(this);\n        this.toggleResetPasswordPopup = this.toggleResetPasswordPopup.bind(this);\n        this.handleForgotPassword = this.handleForgotPassword.bind(this);\n        this.handleSuccessfulRegistration = this.handleSuccessfulRegistration.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    toggleMobileMenu() {\n        console.log('MOBILE MENU TOGGLED ' + this.state.mobileMenuVisible);\n        this.setState({mobileMenuVisible: !this.state.mobileMenuVisible});\n    };\n    toggleLoginPopup() {\n        console.log('LOGIN POPUP TOGGLED ' + this.state.loginPopupVisible);\n        this.setState({loginPopupVisible: !this.state.loginPopupVisible});\n    };\n    toggleRegisterPopup() {\n        console.log('REGISTER POPUP TOGGLED ' + this.state.registerPopupVisible);\n        this.setState({registerPopupVisible: !this.state.registerPopupVisible});\n    };\n    toggleResetPasswordPopup() {\n        console.log('RESET PASSWORD POPUP TOGGLED ' + this.state.resetPasswordPopupVisible);\n        this.setState({resetPasswordPopupVisible: !this.state.resetPasswordPopupVisible});\n    };\n    handleForgotPassword(){ \n        // Close login popup with the forgot password button and open forgot password popup\n        this.setState({loginPopupVisible: false});\n        this.setState({resetPasswordPopupVisible: true});\n    }\n    handleSuccessfulRegistration(){\n        // Close registartion window and open login window\n        this.setState({registerPopupVisible: false});\n        this.setState({loginPopupVisible: true});\n    }\n    handleLogout(){\n        // Remove tokens, is_temp variable, username and refresh the page \n        localStorage.removeItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.access_token);\n        localStorage.removeItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.refresh_token);\n        localStorage.setItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.is_temp, true);\n        localStorage.removeItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.username);\n        window.location.reload(false); // Refresh page\n    }\n\n    render() {\n        return (\n            <div>\n                <Box sx={{ flexGrow: 1 }}>\n\n                    {/* Popup for login */}\n                    <LoginPopupHandler\n                        visible = {this.state.loginPopupVisible}\n                        \n                        onCloseClick = {this.toggleLoginPopup} // Toggle for close menu\n                        onForgotPasswordClick = {this.handleForgotPassword} // Open forgot password popup\n                    />\n\n                    {/* Popup for register */}\n                    <RegisterPopupHandler\n                        visible = {this.state.registerPopupVisible}\n\n                        onCloseClick = {this.toggleRegisterPopup} // Toggle for close menu\n                        onSuccessfulRegistration = {this.handleSuccessfulRegistration}\n                    />\n\n                    {/* Popup for reset password */}\n                    <ResetPasswordPopupHandler\n                        visible = {this.state.resetPasswordPopupVisible}\n\n                        onCloseClick = {this.toggleResetPasswordPopup} // Toggle for close menu\n                    />\n\n                    {/* Popup menu for mobile */}\n                    <MobileNavigationMenuHandler\n                        visible = {this.state.mobileMenuVisible}\n                        favoritesBadgeNumber = {this.props.favoriteStickersStyleOptionIds.length}\n                        cartBadgeNumber = {this.props.totalCartItems}\n                        \n\n                        onClickMobileMenu = {this.toggleMobileMenu}  // Toggle for burger menu\n                        onClickLoginPopup = {this.toggleLoginPopup}  // Toggle for login popup\n                        onClickRegisterPopup = {this.toggleRegisterPopup}  // Toggle for login popup\n                        onClickResetPasswordPopup = {this.toggleResetPasswordPopup}  // Toggle for reset password popup\n                        onClickLogout = {this.handleLogout}\n                    />\n\n                    {/* Desktop menu */}\n                    <DekstopNavigationMenu\n                        favoritesBadgeNumber = {this.props.favoriteStickersStyleOptionIds.length}\n                        cartBadgeNumber = {this.props.totalCartItems}\n\n                        onClickMobileMenu = {this.toggleMobileMenu}  // Toggle for burger menu\n                        onClickLoginPopup = {this.toggleLoginPopup}  // Toggle for login popup\n                        onClickRegisterPopup = {this.toggleRegisterPopup}  // Toggle for login popup\n                        onClickResetPasswordPopup = {this.toggleResetPasswordPopup}  // Toggle for reset password popup\n                        onClickLogout = {this.handleLogout}\n                    />\n                </Box>\n            </div>\n        );\n    }\n}\n\nexport default Navigation"]},"metadata":{},"sourceType":"module"}