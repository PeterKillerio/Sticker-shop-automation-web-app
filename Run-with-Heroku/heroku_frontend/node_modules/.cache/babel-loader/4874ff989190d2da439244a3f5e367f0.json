{"ast":null,"code":"import axios from 'axios'; // Import constants\n\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants';\n\nconst addFavoriteSticker = async function (stickerStyleOptionId) {\n  // API call: add favorite sticker based on the current user\n  // This function is used in different levels of the application and returns \n  // api server response\n  let ret = null;\n  await axios({\n    method: 'post',\n    url: GLOBAL_CONSTANTS.API_CALL_BASE_URL + LOCAL_CONSTANTS.API_CALL_URLS.add_favorite_sticker,\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.access_token)\n    },\n    data: {\n      sticker_style_option_id: stickerStyleOptionId\n    },\n    validateStatus: () => true\n  }).then(res => {\n    console.log(\"Func_addFavoriteSticker.js res: \" + JSON.stringify(res));\n\n    if (res.status != 200) {\n      // Invalid request\n      console.log(\"<WARNING:Func_addFavoriteSticker.js>: Invalid request.\");\n    } else {\n      // Valid request\n      console.log(\"<INFO:Func_addFavoriteSticker.js> Access token is valid.\");\n    }\n\n    ret = res;\n  }); // Return after axios finished\n\n  return ret;\n};\n\nexport default addFavoriteSticker;","map":{"version":3,"sources":["/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_Favorites/Func_addFavoriteSticker.js"],"names":["axios","GLOBAL_CONSTANTS","LOCAL_CONSTANTS","addFavoriteSticker","stickerStyleOptionId","ret","method","url","API_CALL_BASE_URL","API_CALL_URLS","add_favorite_sticker","headers","Authorization","localStorage","getItem","LOCAL_STORAGE","access_token","data","sticker_style_option_id","validateStatus","then","res","console","log","JSON","stringify","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,KAAKC,gBAAZ,MAAkC,uBAAlC;AACA,OAAO,KAAKC,eAAZ,MAAiC,kBAAjC;;AAEA,MAAMC,kBAAkB,GAAG,gBAAeC,oBAAf,EAAoC;AAC3D;AACA;AACA;AACA,MAAIC,GAAG,GAAG,IAAV;AAEA,QAAML,KAAK,CAAC;AACRM,IAAAA,MAAM,EAAE,MADA;AAERC,IAAAA,GAAG,EAAKN,gBAAgB,CAACO,iBAAjB,GACAN,eAAe,CAACO,aAAhB,CAA8BC,oBAH9B;AAIRC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqBb,gBAAgB,CAACc,aAAjB,CAA+BC,YAApD;AAA7B,KAJD;AAKRC,IAAAA,IAAI,EAAE;AAACC,MAAAA,uBAAuB,EAAEd;AAA1B,KALE;AAMRe,IAAAA,cAAc,EAAE,MAAM;AANd,GAAD,CAAL,CAOHC,IAPG,CAOEC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAjD;;AACA,QAAIA,GAAG,CAACK,MAAJ,IAAc,GAAlB,EAAsB;AAClB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ;AACH,KAHD,MAGK;AACD;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ;AACH;;AACDlB,IAAAA,GAAG,GAAGgB,GAAN;AACH,GAjBK,CAAN,CAN2D,CAyB3D;;AACA,SAAOhB,GAAP;AACH,CA3BD;;AA8BA,eAAeF,kBAAf","sourcesContent":["import axios from 'axios';\n\n// Import constants\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants'\n\nconst addFavoriteSticker = async function(stickerStyleOptionId){\n    // API call: add favorite sticker based on the current user\n    // This function is used in different levels of the application and returns \n    // api server response\n    let ret = null;\n\n    await axios({\n        method: 'post',\n        url:    GLOBAL_CONSTANTS.API_CALL_BASE_URL + \n                LOCAL_CONSTANTS.API_CALL_URLS.add_favorite_sticker,\n        headers: { Authorization: \"Bearer \" + localStorage.getItem(GLOBAL_CONSTANTS.LOCAL_STORAGE.access_token), },\n        data: {sticker_style_option_id: stickerStyleOptionId},\n        validateStatus: () => true\n    }).then(res => {\n        console.log(\"Func_addFavoriteSticker.js res: \" + JSON.stringify(res))\n        if (res.status != 200){\n            // Invalid request\n            console.log(\"<WARNING:Func_addFavoriteSticker.js>: Invalid request.\");\n        }else{\n            // Valid request\n            console.log(\"<INFO:Func_addFavoriteSticker.js> Access token is valid.\");\n        }\n        ret = res;\n    });\n\n    // Return after axios finished\n    return ret;\n}\n\n\nexport default addFavoriteSticker\n"]},"metadata":{},"sourceType":"module"}