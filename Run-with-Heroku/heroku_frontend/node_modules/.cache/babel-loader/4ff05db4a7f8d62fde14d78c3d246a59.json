{"ast":null,"code":"var _jsxFileName = \"/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_Editor/App_BottomBar.js\";\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './App_BottomBar.css';\nimport mergeImages from 'merge-images';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\"; // MUI\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport IconButton from '@mui/material/IconButton'; // Import constants\n\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants'; // Components\n\nimport OnChangeIndexButton from './App_OnChangeIndexButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BottomBar(props) {\n  const brushTool = () => {\n    var brushTool = null; // Conditional rendering for paint/depaint tool\n\n    if (props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['PAINT_TOOL']) {\n      brushTool = /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('PAINT_TOOL');\n            },\n            size: \"medium\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"brush\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('PAINT_TOOL');\n            },\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-circle\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('DEPAINT_TOOL');\n            },\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"remove-circle-outline\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            name: \"brushColor\",\n            value: props.paintDepaintCanvasColor,\n            onChange: event => props.changeBrushColor(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    } else if (props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['DEPAINT_TOOL']) {\n      brushTool = /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('PAINT_TOOL');\n            },\n            size: \"medium\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"brush\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('PAINT_TOOL');\n            },\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-circle-outline\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('DEPAINT_TOOL');\n            },\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"remove-circle\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            name: \"brushColor\",\n            value: props.paintDepaintCanvasColor,\n            onChange: event => props.changeBrushColor(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this);\n    } else {\n      brushTool = /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: event => {\n            props.onChangeTool('PAINT_TOOL');\n          },\n          size: \"medium\",\n          children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n            name: \"brush-outline\",\n            style: {\n              color: GLOBAL_CONSTANTS.COLORS.colorA\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 26\n      }, this);\n    }\n\n    return brushTool;\n  };\n\n  const lineWidthSlider = () => {\n    var widthSlider = null;\n\n    if (props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['PAINT_TOOL'] || props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['DEPAINT_TOOL'] || props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['ERASER_TOOL'] || props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['DEERASER_TOOL']) {\n      widthSlider = /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Line width\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Slider // className=\"sideSlider\"\n          , {\n            \"aria-label\": \"Line width slider\",\n            defaultValue: props.lineWidth,\n            step: 1,\n            marks: true,\n            min: 1,\n            max: 250,\n            valueLabelDisplay: \"auto\",\n            onChangeCommitted: (event, value) => props.onChangeLineWidth(value),\n            style: {\n              color: GLOBAL_CONSTANTS.COLORS.colorA\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this);\n    }\n\n    return widthSlider;\n  };\n\n  const eraserTool = () => {\n    var eraserTool = null; // Conditional rendering for paint/depaint tool\n\n    if (props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['ERASER_TOOL']) {\n      eraserTool = /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('ERASER_TOOL');\n            },\n            size: \"medium\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"eye-off\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('ERASER_TOOL');\n            },\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-circle\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('DEERASER_TOOL');\n            },\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"remove-circle-outline\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this);\n    } else if (props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['DEERASER_TOOL']) {\n      eraserTool = /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('ERASER_TOOL');\n            },\n            size: \"medium\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"eye-off\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('ERASER_TOOL');\n            },\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"add-circle-outline\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('DEERASER_TOOL');\n            },\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"remove-circle\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this);\n    } else {\n      eraserTool = /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: event => {\n              props.onChangeTool('ERASER_TOOL');\n            },\n            size: \"medium\",\n            children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n              name: \"eye-off-outline\",\n              style: {\n                color: GLOBAL_CONSTANTS.COLORS.colorA\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this);\n    }\n\n    return eraserTool;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvasBottomBar\",\n    style: {\n      backgroundColor: GLOBAL_CONSTANTS.COLORS.colorB,\n      color: GLOBAL_CONSTANTS.COLORS.colorA,\n      boxShadow: '0px 0px 5px 1px rgba(255,255,255,0.70)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: event => {\n            props.onChangeTool('MOVE_TOOL');\n          },\n          size: \"medium\",\n          children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n            name: \"move\",\n            style: {\n              color: GLOBAL_CONSTANTS.COLORS.colorA\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), brushTool(), eraserTool(), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Image scale:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"imageScaleSliderGrid\",\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          \"aria-label\": \"Image scale slider\",\n          defaultValue: props.imageToCanvasScale,\n          step: 0.1,\n          marks: true,\n          min: 0.2,\n          max: 4,\n          valueLabelDisplay: \"auto\",\n          onChange: (event, value) => props.onChangeImageScale(value),\n          style: {\n            color: GLOBAL_CONSTANTS.COLORS.colorA\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"sliderContainer\",\n      alignItems: \"center\",\n      children: lineWidthSlider()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"sliderContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n}\n\n_c = BottomBar;\nexport default BottomBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"BottomBar\");","map":{"version":3,"sources":["/home/kio/Documents/Programming/Bachelor_thesis/Bachelor-thesis-application/heroku/src/Components/App_Editor/App_BottomBar.js"],"names":["React","useEffect","ReactDOM","useSearchParams","axios","mergeImages","BrowserRouter","Router","Switch","Route","Link","useParams","Grid","Button","Slider","IconButton","GLOBAL_CONSTANTS","LOCAL_CONSTANTS","OnChangeIndexButton","BottomBar","props","brushTool","currentSelectedTool","CANVAS_TOOLS","event","onChangeTool","color","COLORS","colorA","paintDepaintCanvasColor","changeBrushColor","lineWidthSlider","widthSlider","lineWidth","value","onChangeLineWidth","eraserTool","backgroundColor","colorB","boxShadow","imageToCanvasScale","onChangeImageScale"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './App_BottomBar.css';\nimport mergeImages from 'merge-images';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams\n  } from \"react-router-dom\";\n\n// MUI\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport IconButton from '@mui/material/IconButton';\n\n// Import constants\nimport * as GLOBAL_CONSTANTS from '../../GlobalConstants';\nimport * as LOCAL_CONSTANTS from './LocalConstants'\n\n// Components\nimport OnChangeIndexButton from './App_OnChangeIndexButton'\n\nfunction BottomBar(props){\n\n    const brushTool = () => {\n        var brushTool = null;\n\n        // Conditional rendering for paint/depaint tool\n        if( props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['PAINT_TOOL']){\n            \n            brushTool = (\n                <React.Fragment>\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('PAINT_TOOL')}}\n                                    size='medium'>\n                            <ion-icon name=\"brush\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('PAINT_TOOL')}}\n                                    size='small'>\n                            <ion-icon name=\"add-circle\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('DEPAINT_TOOL')}}\n                                    size='small'>\n                            <ion-icon name=\"remove-circle-outline\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n\n                    <Grid>\n                        <input  type=\"color\" name=\"brushColor\" \n                                value={props.paintDepaintCanvasColor}\n                                onChange={(event) => props.changeBrushColor(event)}>\n                        </input>\n                    </Grid>\n\n                </React.Fragment>\n                );\n\n        }else if (props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['DEPAINT_TOOL']){\n            brushTool = (\n                <React.Fragment>\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('PAINT_TOOL')}}\n                                    size='medium'>\n                            <ion-icon name=\"brush\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('PAINT_TOOL')}}\n                                    size='small'>\n                            <ion-icon name=\"add-circle-outline\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('DEPAINT_TOOL')}}\n                                    size='small'>\n                            <ion-icon name=\"remove-circle\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n\n                    <Grid>\n                        <input  type=\"color\" name=\"brushColor\" \n                                value={props.paintDepaintCanvasColor}\n                                onChange={(event) => props.changeBrushColor(event)}>\n                        </input>\n                    </Grid>\n                </React.Fragment>\n            );\n        }else{\n            brushTool = (<Grid>\n                <IconButton onClick={(event) => {props.onChangeTool('PAINT_TOOL')}}\n                            size='medium'>\n                    <ion-icon name=\"brush-outline\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                </IconButton>\n            </Grid>);\n        }\n        return(brushTool);\n    };\n\n    const lineWidthSlider = () => {\n        var widthSlider = null;\n\n        if( props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['PAINT_TOOL'] || \n            (props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['DEPAINT_TOOL']) ||\n            (props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['ERASER_TOOL']) ||\n            (props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['DEERASER_TOOL'])\n        ){\n            widthSlider = (\n                <React.Fragment>\n                    <Grid xs={2}>\n                        <h5>\n                            Line width\n                        </h5>\n                    </Grid>\n                    <Grid xs={10}>\n                        <Slider\n                            // className=\"sideSlider\"\n                            aria-label=\"Line width slider\"\n                            defaultValue={props.lineWidth}\n                            step={1}\n                            marks\n                            min={1}\n                            max={250}\n                            valueLabelDisplay=\"auto\"\n                            onChangeCommitted={(event, value) => props.onChangeLineWidth(value)}\n                            style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}\n                        />\n                    </Grid>\n                </React.Fragment>\n            );\n        }\n\n        return(widthSlider);\n    };\n\n    const eraserTool = () => {\n        var eraserTool = null;\n\n        // Conditional rendering for paint/depaint tool\n        if( props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['ERASER_TOOL']){\n            \n            eraserTool = (\n                <React.Fragment>\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('ERASER_TOOL')}}\n                                    size='medium'>\n                            <ion-icon name=\"eye-off\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('ERASER_TOOL')}}\n                                    size='small'>\n                            <ion-icon name=\"add-circle\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('DEERASER_TOOL')}}\n                                    size='small'>\n                            <ion-icon name=\"remove-circle-outline\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n                </React.Fragment>\n                );\n\n        }else if (props.currentSelectedTool == LOCAL_CONSTANTS.CANVAS_TOOLS['DEERASER_TOOL']){\n            eraserTool = (\n                <React.Fragment>\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('ERASER_TOOL')}}\n                                    size='medium'>\n                            <ion-icon name=\"eye-off\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('ERASER_TOOL')}}\n                                    size='small'>\n                            <ion-icon name=\"add-circle-outline\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('DEERASER_TOOL')}}\n                                    size='small'>\n                            <ion-icon name=\"remove-circle\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n                </React.Fragment>\n            );\n        }else{\n            eraserTool = (\n                <React.Fragment>\n                    <Grid>\n                        <IconButton onClick={(event) => {props.onChangeTool('ERASER_TOOL')}}\n                                    size='medium'>\n                            <ion-icon name=\"eye-off-outline\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                        </IconButton>\n                    </Grid>\n                </React.Fragment>);\n        }\n        return(eraserTool);\n    };\n\n    return(  \n        <div    className=\"canvasBottomBar\"\n                style={{backgroundColor: GLOBAL_CONSTANTS.COLORS.colorB, color: GLOBAL_CONSTANTS.COLORS.colorA,\n                        boxShadow: '0px 0px 5px 1px rgba(255,255,255,0.70)'}}>\n            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n\n                <Grid display=\"flex\" justifyContent=\"center\">\n                    <IconButton onClick={(event) => {props.onChangeTool('MOVE_TOOL')}}\n                                size='medium'>\n                        <ion-icon name=\"move\" style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}></ion-icon>\n                    </IconButton>\n                </Grid>\n            \n                {brushTool()}\n                \n                {eraserTool()}\n\n\n                <Grid>\n                    <h5>\n                        Image scale:\n                    </h5>\n                </Grid>\n                <Grid className='imageScaleSliderGrid'>\n                    <Slider\n                        aria-label=\"Image scale slider\"\n                        defaultValue={props.imageToCanvasScale}\n                        step={0.1}\n                        marks\n                        min={0.2}\n                        max={4}\n                        valueLabelDisplay=\"auto\"\n                        onChange={(event, value) => props.onChangeImageScale(value)}\n                        style={{color: GLOBAL_CONSTANTS.COLORS.colorA}}\n                    />\n                </Grid>\n\n                <Grid>\n                    <Grid container>\n                        {/* <Grid xs={4}>\n                            <h5 className='imageScaleSlider'>\n                                Image scale\n                            </h5>\n                        </Grid> */}\n                        \n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid container className='sliderContainer' alignItems=\"center\">\n                        \n                {lineWidthSlider()}                \n\n            </Grid>\n\n            <Grid container className='sliderContainer'>\n                \n            </Grid>\n            \n        </div>        \n    );       \n}\n\nexport default BottomBar\n"]},"metadata":{},"sourceType":"module"}